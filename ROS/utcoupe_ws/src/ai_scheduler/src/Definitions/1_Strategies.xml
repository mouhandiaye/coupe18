<strategies>
	
	<!-- STRATEGY : <description here> -->
	<strategy name="strategy_ftw">
		<game>
			<time>90</time>
		</game>
		<actions name="In-Game Actions">
			<!--<actionref ref="actuators_startup_sequence"/>-->
			<actionref ref="wait_for_jack"/>
			<nextneedsprevious/>
			<orderref ref="ai_delay"/>
			<nextneedsprevious/>
			<actionlist name="Main actions" order="linear">
				<conditions>
				</conditions>
				<orderref ref="wheels_goto">
					<position type="xy" x="3" y="2000"/>
				</orderref>

				<actionlist name="Take Modules" exec="all" order="linear" reward="100">

					<actionlist name="Load modules" exec="+" order="random">
						<actionref ref = "load_module">
							<position type="object" ref="map_object_module1" origin="robot_origin_gripper"/>
						</actionref>
						<actionref ref = "load_module">
							<ID>7</ID>
						</actionref>
						<actionref ref = "load_module">
							<ID>4</ID>
						</actionref>
					</actionlist>

					<nextneedsprevious/> <!-- This actionList needs the previous task to be OK in order to run-->
					<actionlist name="Unload on left platform" exec="+" order="linear">
						<conditions>
						</conditions>
						<actionref ref = "unload_module">
							<position type="waypoint" ref = "left_unloadzone_p1"/>
						</actionref>
						<nextneedsprevious/>
						<actionref ref = "unload_module">
							<position type="waypoint" ref = "left_unloadzone_p2"/>
						</actionref>
						<actionref ref = "unload_module">
							<position type="waypoint" ref = "left_unloadzone_p2"/>
						</actionref>
					</actionlist>


				</actionlist>
			</actionlist>
		</actions>
		<actions_onfinish name="Actions after game">
			<orderref ref="funny_action"/>
		</actions_onfinish>
	</strategy>
</strategies>